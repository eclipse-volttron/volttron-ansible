### We have a single role to set default variables used throughtout other roles, playbooks, etc.
### The reason for this is that many settings need to agree, despite being used in different roles
### and we want to ensure that the defaults are set/updated in a single place. This also serves to
### gather the configurable parameters in a single place for easier referece.
---
- name: Set default values
  set_fact:
    ## some standard ansible vars where we want to ensure assignment and defaults
    ansible_user: "{{ ansible_user | default(ansible_user_id) }}"
    ansible_python_interpreter: "{{ ansible_python_interpreter | default('{{discovered_interpreter_python}}') }}"

    ### Variable to allow for different python interpreters between ansible and the volttron platform env.
    python_interpreter: "{{ python_interpreter | default('{{ansible_python_interpreter}}') }}"

    ###
    #  [boolean] default: ``False``
    #    enable verbose ansible debug tasks
    verbose_debug_tasks: "{{ verbose_debug_tasks | default(False) }}"
    ###
    #  [list of package names] default ``[]``
    #    extra system-level pacakges to install via package manager
    extra_system_packages: "{{ extra_system_packages | default([]) }}"
    ###
    #  [path] default ``$HOME/ansible_venv``
    #    where we will create a venv on the managed node where
    #    dependencies of ansible and our ansible modules get installed. This includes both custom VOLTTRON modules,
    #    as well as dependencies of ansible's modules
    venv_for_ansible: "{{ venv_for_ansible | default('{{ ansible_env.HOME }}/ansible_venv') | regex_replace('^~\/', '{{ ansible_env.HOME }}/') }}"

    ## variables related to the version of volttron to be installed ##
    ###
    #  [boolean] default: ``False``
    #    if true then copy the volttron source tree where this playbook is located, rather than a github clone
    volttron_use_local_source: "{{ volttron_use_local_source | default(False) }}"
    ###
    #  [string] default ``https://github.com/volttron/volttron.git``
    #    The repo url to use when cloning the volttron source.
    volttron_repo_url: "{{ volttron_repo_url | default('https://github.com/volttron/volttron.git') }}"

    # volttron_git_organization: "{{ volttron_git_organization | default('volttron') }}"
    ###
    #  [string] default: ``main``
    #    The branch portion of the source url used to retrieve the VOLTTRON source.
    #    The full url is of the form
    #    ``https://github.com/{{ volttron_git_organization }}/{{ volttron_git_repo }}/archive/{{ volttron_git_branch }}.tar.gz``
    # volttron_git_branch: "{{ volttron_git_branch | default('main') }}"
    ###
    #  [bool] default: ``false``
    #    Enable the force flag when cloning and/or updating volttron root.
    #    If true, will discard any local changes to tracked files (but does retain untracked files).
    # volttron_git_force_clone: "{{ volttron_git_force_clone | default(False) }}"

    ## variables related to where volttron source and platform state are stored on the node
    ###
    #  [string - path] default: ``$HOME/.volttron``
    #    path to the VOLTTRON home where all platform runtime files are stored
    volttron_home: "{{ volttron_home | default('{{ ansible_env.HOME }}/.volttron') | regex_replace('^~\/', '{{ ansible_env.HOME }}/') }}"

    #  [string - path] default: ``$HOME/.volttron/volttron.log``
    #    Path to the volttron log file.
    volttron_log_file: "{{ volttron_log_file | default('{{volttron_home}}/volttron.log') }}"
    ###
    #  [string - path] default: ``$HOME/volttron.venv``
    #    path to the python virtual environment into which the VOLTTRON package will be installed
    volttron_venv: "{{ volttron_venv | default('{{ ansible_env.HOME }}/volttron.venv') | regex_replace('^~\/', '{{ ansible_env.HOME }}/') }}"
    ## configure if the platform should be running
    platform_state: "{{ platform_state | default('running') }}"

    ## variables defining where the platform configuration will be placed on the node
    ###
    #  [string - path] default: ``$HOME/configs``
    #    Path on the managed host where agent-related configuration files are placed
    host_configs_dir: "{{ host_configs_dir | default('{{ ansible_env.HOME }}/configs') }}"

    ###
    #  [list of strings] default: ``[]``
    #    List of available feature sets to include when bootstrapping the remote volttron platform.
    #    Any valid double-dash flags to the ``bootstrap.py`` script may be listed here (without the
    #    double dash flag marking).
    volttron_features: "{{ volttron_features | default([]) }}"
    ###
    #  [list of strings] default: ``[]``
    #    A list of extra python packages to install into the VOLTTRON virtual environment
    extra_requirements: "{{ extra_requirements | default([]) }}"

    ###
    #  [string] default: ``''``
    #    Configurable http proxy passed to pip when installing extra packages
    http_proxy: "{{ http_proxy | default('') }}"
    https_proxy: "{{ https_proxy | default('') }}"

    ###
    #  [string] default: (the default is system dependent)
    #    If using the RMQ bus, this sets the version of erlang packages to install
    erlang_package_version: >
      "{{ erlang_package_version | default( (ansible_architecture is search('arm')) |
                                            ternary('1:21.2.6+dfsg-1', '1:22.1.8.1-1') ) }}"

## the following facts must be set in separate tasks because they build on earlier facts
## NOTE: ansible does not consider paths relative to CWD, these paths must be absolute
##       or in the tree of the playbook in a default searched location
- set_fact:
    ###
    #  [string - path] default: ``inventory_dir``
    #    Absolute path (on the control system) to the directory containing remote platform configurations
    #    This is the source which is used when setting up the remotes.
    deployment_config_root: "{{ deployment_config_root | default(inventory_dir) }}"
- set_fact:
    ###
    #  [string - path] default: ``${deployment_config_root}/inventory_hostname``
    #    Absolute path (on the control system) to the directory containing the configuration for the specific remote host
    deployment_host_config_dir: "{{ deployment_host_config_dir | default( deployment_config_root + '/' + inventory_hostname ) }}"
- set_fact:
    ###
    #  [string - path] default: ``${deployment_host_config_dir}/configs``
    #    absolute path (on the control system) to the agent configurations directory for the specific remote host
    deployment_platform_config_dir: "{{ deployment_platform_config_dir | default( deployment_host_config_dir + '/configs') }}"
- set_fact:
    ###
    #  [string - path] default: ``${deployment_host_config_dir}/${inventory_hostname}.yml``
    #    absolute path (on the control system) to the platform configuration file for this node
    deployment_platform_config_file: "{{ deployment_platform_config_file | default( deployment_host_config_dir + '/' + inventory_hostname + '.yml' ) }}"

## Derived facts, not configurable in inventory
- set_fact:
    original_ansible_python_interpreter: "{{ ansible_python_interpreter }}"
- name: load host configuration
  local_action:
    module: include_vars
    file: "{{ deployment_platform_config_file }}"
    name: host_configuration
- set_fact:
    message_bus: "{{ host_configuration['config']['message-bus'] | default('zmq') }}"
    instance_name: "{{ host_configuration['config']['instance-name'] | default(inventory_hostname) }}"

- name: print all default VOLTTRON recipe facts
  debug:
    msg:
    - "verbose_debug_tasks {{ verbose_debug_tasks }}"
    - "extra_system_packages {{ extra_system_packages }}"
    - "extra_system_packages {{ extra_system_packages }}"
    - "venv_for_ansible {{ venv_for_ansible }}"
    - "volttron_use_local_source {{ volttron_use_local_source }}"
    #    - "volttron_git_organization {{ volttron_git_organization }}"
    #    - "volttron_git_repo {{ volttron_git_repo }}"
    #    - "volttron_git_branch {{ volttron_git_branch }}"
    - "volttron_home {{ volttron_home }}"
    - "volttron_log_file {{ volttron_log_file }}"
    - "volttron_venv {{ volttron_venv }}"
    - "platform_state {{ platform_state }}"
    - "host_configs_dir {{ host_configs_dir }}"
    - "volttron_features {{ volttron_features }}"
    - "extra_requirements {{ extra_requirements }}"
    - "http_proxy {{ http_proxy }}"
    - "erlang_package_version {{ erlang_package_version }}"
    - "deployment_config_root {{ deployment_config_root }}"
    - "deployment_host_config_dir {{ deployment_host_config_dir }}"
    - "deployment_platform_config_dir {{ deployment_platform_config_dir }}"
    - "deployment_platform_config_file {{ deployment_platform_config_file }}"
    - "--- values determined from configuration files ---"
    - "message_bus {{ message_bus }}"
    - "instance_name {{ instance_name }}"
  when: verbose_debug_tasks | bool
