### Install packages on apt-based systems (ubuntu and debian are supported)
---
- name: check ubuntu major versions
  when: ansible_distribution == "Ubuntu"
  assert:
    that:
      - (ansible_distribution_major_version | int >= 18)
      - (ansible_distribution_major_version | int <= 22)
    fail_msg: "the system is identified as Ubuntu:{{ansible_distribution_major_version}}, which is not supported"
- name: check debian version
  when: ansible_distribution == "Debian"
  assert:
    that:
      - ansible_distribution_major_version | int >= 10
      - ansible_distribution_major_version | int < 11
    fail_msg: "the system is identified as Debian:{{ansible_distribution_major_version}}, which is not supported"

- name: install system packages
  become: yes
  become_method: sudo
  block:

  - name: Install base software
    apt:
      state: present
      name:
      - build-essential
      - git
      - python3-dev
      - python3-pip
      - python3-venv
      - libssl-dev
      - libevent-dev
      - libzmq3-dev

  - name: install rsync if local volttron source is being used
    when: volttron_use_local_source
    apt:
      state: present
      name:
      - rsync

  - name: install extra packages from inventory
    when: (extra_system_packages | length) > 0
    apt:
      state: present
      name: extra_system_packages

  - name: install rabbitmq
    when: message_bus == 'rmq'
    block:
    - name: Installing extra system level things for rabbit.
      apt:
        state: present
        name:
        - apt-transport-https
        - libwxbase3.0-0v5
        - libwxgtk3.0-0v5
        - libsctp1
    - name: Adding apt_key for erlang solutions
      apt_key:
        url: https://packages.erlang-solutions.com/ubuntu/erlang_solutions.asc
        state: present
    - name: Adding apt repo for erlang
      apt_repository:
        update_cache: yes
        repo: "deb https://packages.erlang-solutions.com/{{ ansible_distribution_file_variety | lower }} {{ ansible_distribution_release | lower }} contrib"
        state: present
        filename: from_ansible.erlang.solutions
    - set_fact:
        erlang_packages:
        - "erlang-asn1={{ erlang_package_version | regex_replace('\"','') }}"
        - "erlang-base={{ erlang_package_version | regex_replace('\"','') }}"
        - "erlang-crypto={{ erlang_package_version | regex_replace('\"','') }}"
        - "erlang-diameter={{ erlang_package_version | regex_replace('\"','') }}"
        - "erlang-edoc={{ erlang_package_version | regex_replace('\"','') }}"
        - "erlang-eldap={{ erlang_package_version | regex_replace('\"','') }}"
        - "erlang-erl-docgen={{ erlang_package_version | regex_replace('\"','') }}"
        - "erlang-eunit={{ erlang_package_version | regex_replace('\"','') }}"
        - "erlang-inets={{ erlang_package_version | regex_replace('\"','') }}"
        - "erlang-mnesia={{ erlang_package_version | regex_replace('\"','') }}"
        - "erlang-odbc={{ erlang_package_version | regex_replace('\"','') }}"
        - "erlang-os-mon={{ erlang_package_version | regex_replace('\"','') }}"
        - "erlang-parsetools={{ erlang_package_version | regex_replace('\"','') }}"
        - "erlang-public-key={{ erlang_package_version | regex_replace('\"','') }}"
        - "erlang-runtime-tools={{ erlang_package_version | regex_replace('\"','') }}"
        - "erlang-snmp={{ erlang_package_version | regex_replace('\"','') }}"
        - "erlang-ssh={{ erlang_package_version | regex_replace('\"','') }}"
        - "erlang-ssl={{ erlang_package_version | regex_replace('\"','') }}"
        - "erlang-syntax-tools={{ erlang_package_version | regex_replace('\"','') }}"
        - "erlang-tools={{ erlang_package_version | regex_replace('\"','') }}"
        - "erlang-xmerl={{ erlang_package_version | regex_replace('\"','') }}"
        - "erlang-nox={{ erlang_package_version | regex_replace('\"','') }}"
        erlang_x86_packages:
        - "erlang-ic={{ erlang_package_version | regex_replace('\"','') }}"
        - "erlang-inviso={{ erlang_package_version | regex_replace('\"','') }}"
        - "erlang-percept={{ erlang_package_version | regex_replace('\"','') }}"
    - set_fact:
        erlang_packages: "{{ erlang_packages + erlang_x86_packages }}"
      when: ansible_architecture not in ["armv7l"]

    - name: Install erlang requirements
      apt:
        update_cache: yes
        state: present
        name: "{{ erlang_packages }}"

- name: note that dependencies were installed
  set_fact:
    dependencies_installed: yes
